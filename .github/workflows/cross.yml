name: cross

env:
  BUILDROOT_VERSION: 2025.02

on: [push, pull_request]

jobs:
  cross-matrix:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: ["m68k", "s390x"]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Check out buildroot
        uses: actions/checkout@v4
        with:
          path: buildroot
          repository: buildroot/buildroot
          ref: ${{ env.BUILDROOT_VERSION }}

      - name: Restore buildroot cache for ${{ matrix.arch }}
        id: restore-buildroot-cache
        uses: actions/cache/restore@v4
        with:
          path: ~/.cache/output
          key: ${{ env.BUILDROOT_VERSION }}-${{ matrix.arch }}-${{ hashFiles('ci/') }}
          restore-keys: ${{ env.BUILDROOT_VERSION }}-${{ matrix.arch }}

      - name: Build buildroot for ${{ matrix.arch }}
        #if: ${{ steps.restore-buildroot-cache.outputs.cache-matched-key == '' }}
        run: |
          export CI_TOP="$PWD"/ci
          export BUILDROOT_OUTPUT=~/.cache/output
          mkdir -p "$BUILDROOT_OUTPUT"
          cp ci/buildroot-config-${{ matrix.arch }} "$BUILDROOT_OUTPUT"/.config
          make -C buildroot O="$BUILDROOT_OUTPUT" olddefconfig
          make -C buildroot O="$BUILDROOT_OUTPUT"

      - name: Save buildroot cache for ${{ matrix.arch }}
        #if: ${{ steps.restore-buildroot-cache.outputs.cache-matched-key == '' }}
        uses: actions/cache/save@v4
        with:
          path: ~/.cache/output
          key: ${{ env.BUILDROOT_VERSION }}-${{ matrix.arch }}-${{ hashFiles('ci/') }}

      - name: Create cache tarball for upload
        run: |
          tar --use-compress-program='zstd -19 -T0 -v' -cf output.tar.zst -C ~/.cache output

      - name: Upload buildroot cache artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUILDROOT_VERSION }}-${{ matrix.arch }}
          path: output.tar.zst

      - name: Check out strace
        uses: actions/checkout@v4
        with:
          path: strace
          repository: strace/strace

      - name: Build strace for ${{ matrix.arch }}
        run: |
          export BUILDROOT_OUTPUT=~/.cache/output
          ./ci/build-strace "$BUILDROOT_OUTPUT" ${{ matrix.arch }}

      - name: List output images
        run: |
          set -x
          ls /home/runner/work/_temp/d2c506db-df10-43f7-a151-271fc736e5ad/cache.tzst ||:
          export CI_TOP="$PWD"/ci
          export BUILDROOT_OUTPUT=~/.cache/output
          cd "$BUILDROOT_OUTPUT"
          kernel=
          args='-m 4G'
          case '${{ matrix.arch }}' in
              m68k)
                  kernel=images/vmlinux
                  args='-m 3399672K -M virt'
                  ;;
              s390x)
                  kernel=images/bzImage
                  ;;
              *) exit 1 ;;
          esac
          find images -ls
          timeout -v 60s ./host/bin/qemu-system $args -kernel "$kernel" -initrd images/rootfs.cpio -nographic
